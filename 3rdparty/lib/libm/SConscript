#
# Copyright (C) 2009-2021 Alex Smith
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#

Import('manager', 'config')

env = manager.Create(flags = {
    'CPPPATH': [Dir('include')],

    # Silence some warnings because I can't be bothered to fix them.
    'CCFLAGS': [
        '-Wno-strict-aliasing',
        '-Wno-sign-compare',
        '-Wno-parentheses',
        '-Wno-uninitialized',
        '-Wno-absolute-value',
        '-Wno-misleading-indentation',
    ],
})

# Nice little trick to make sure that architecture-specific versions of
# functions will get used in preference to the generic versions.
class SourceList:
	def __init__(self):
		self.sources = {}
	def __add__(self, sources):
		for s in sources:
			base = s.name.rsplit('.', 1)[0]
			if base not in self.sources:
				self.sources[base] = s
	def files(self):
		return list(self.sources.values())

# Get a list of source files. Architecture sources must be first because of the
# way the above class works.
sources = SourceList()
SConscript(dirs = ['arch/%s' % (config['ARCH']), 'generic'], exports = ['env', 'sources'])

# Build the library.
env.KiwiLibrary('m',
	sources = sources.files(),
    include_paths = [Dir('include')],
)
