#
# Copyright (C) 2010-2011 Alex Smith
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#

mainmenu "Kiwi Configuration"

config KERNELVERSION
	string
	option env="KERNELVERSION"

config DEBUG
	bool

choice
	prompt "Build type"
	default BUILD_DEBUGOPT

config BUILD_DEBUG
	bool "debug"
	select DEBUG
	help
	  Build without optimization, and enable various sections of debugging code
	  and extra checks. For the kernel, this enables assertions and messages
	  with the LOG_DEBUG log level. It also disables the boot splash screen by
	  default.
	  
	  The built system will generally be very slow, so don't use it unless you
	  really need it.

config BUILD_DEBUGOPT
	bool "debugopt"
	select DEBUG
	help
	  Like debug, but enables compiler optimization.
	  
	  The built system will be slower than release due to assertions and
	  additional debugging checks, but much better than debug. This is the
	  typical configuration for development.

config BUILD_RELEASE
	bool "release"
	help
	  This builds a standard, optimized system, without kernel assertions or
	  extra debugging code.

endchoice

config BUILD
	string
	default "debug" if BUILD_DEBUG
	default "debugopt" if BUILD_DEBUGOPT
	default "release" if BUILD_RELEASE

####################
menu "Build options"
####################

config TOOLCHAIN_DIR
	string "Toolchain directory"
	default "/please/change/me"
	help
	  Path to directory to store toolchain downloads and builds in.

config TOOLCHAIN_MAKE_JOBS
	int "Toolchain parallel build jobs"
	default 1
	help
	  Argument to pass to -j for make when building the toolchain.

config EXTRA_CCFLAGS
	string "Extra CCFLAGS"
	default ""
	help
	  Extra compiler options for both C and C++ code.

config EXTRA_CFLAGS
	string "Extra CFLAGS"
	default ""
	help
	  Extra compiler options for C code.

config EXTRA_CXXFLAGS
	string "Extra CXXFLAGS"
	default ""
	help
	  Extra compiler options for C++ code.

config QEMU_BINARY_AMD64
	string "QEMU binary"
	depends on ARCH_AMD64
	default "qemu-system-x86_64"
	help
	  Path to the QEMU binary to use for the "qemu" build target.

config QEMU_BINARY_ARM64
	string "QEMU binary"
	depends on ARCH_ARM64
	default "qemu-system-aarch64"
	help
	  Path to the QEMU binary to use for the "qemu" build target.

config QEMU_OPTS_AMD64
	string "Extra QEMU options"
	depends on ARCH_AMD64
	default "-monitor vc:1024x768 -serial stdio -vga std -s -rtc base=localtime -m 1024 -enable-kvm -smp cpus=4,cores=4"
	help
	  Extra options to pass to QEMU for the "qemu" build target.

config QEMU_OPTS_ARM64
	string "Extra QEMU options"
	depends on ARCH_ARM64
	default "-monitor vc:1024x768 -serial stdio -s -m 1024 -M virt -cpu cortex-a72"
	help
	  Extra options to pass to QEMU for the "qemu" build target.

config EXTRA_FSIMAGE
	string "Extra filesystem image contents"
	default ""
	help
	  Path to a directory containing extra files to copy in to the generated
	  filesystem image.

config FORCE_VIDEO_MODE
	string "Force a video mode to be used"
	default ""
	help
	  If set, the boot loader configuration file will be generated with the
	  video_mode option set to this value.

#######
endmenu
#######

comment "Target system "

source "config/Kconfig.arch"
source "config/Kconfig.platform"

comment "System configuration"

menu "Kernel configuration"
source "source/kernel/Kconfig"
endmenu
