#
# Copyright (C) 2009-2022 Alex Smith
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#

Import('config', 'manager')

env = manager.create_host()

# Warnings that occur in generated code.
env['CCFLAGS'] += ['-Wno-redundant-decls', '-Wno-unused-function']

sysgen = env.Program('sysgen', [
    'amd64_target.cpp',
    'arm64_target.cpp',
    'parser.y',
    'lexer.l',
    'main.cpp',
])

# Add sysgen to the build environments.
manager.add_variable('SYSGEN', sysgen)
manager.add_variable('SYSGENFLAGS', [])

# Add builders to generate system call code.
manager.add_tool('SyscallTable', env['SYSGEN'], Action(
    '$SYSGEN $SYSGENFLAGS -t $TABLE -o $TARGET %s $SOURCES' % (config['ARCH']),
    '$GENCOMSTR'))
manager.add_tool('SyscallHeader', env['SYSGEN'], Action(
    '$SYSGEN $SYSGENFLAGS -n $GUARD -o $TARGET %s $SOURCES' % (config['ARCH']),
    '$GENCOMSTR'))
manager.add_tool('Syscalls', env['SYSGEN'], Action(
    '$SYSGEN $SYSGENFLAGS -o $TARGET %s $SOURCES' % (config['ARCH']),
    '$GENCOMSTR'))
