#!/usr/bin/env python
#
# SPDX-FileCopyrightText: (C) Alex Smith <alex@alex-smith.me.uk>
# SPDX-License-Identifier: ISC
#

import sys

if len(sys.argv) != 4:
    print('Usage: %s <input file> <table name> <size name>' % (sys.argv[0]))
    sys.exit(1)

# Read in the input file and generate a sorted list of errors.
f = open(sys.argv[1], 'r')
errors = []
for s in f.readlines():
    line = s.strip().split()
    if len(line) < 6 or line[0] != '#define' or not line[2].isdigit():
        continue
    errors.append((int(line[2]), ' '.join(line[4:-1])[0:-1]))
errors.sort(key=lambda x: x[0])

# Generate the output.
print('/* This file is automatically generated. Do not edit! */')
print('#include <stddef.h>')
print('const char *%s[] __attribute__((visibility("hidden"))) = {' % (sys.argv[2]))
for err in errors:
    print(' [%d] = "%s",' % (err[0], err[1]))
print('};')
print('size_t %s __attribute__((visibility("hidden"))) = %d;' % (sys.argv[3], errors[-1][0] + 1))
